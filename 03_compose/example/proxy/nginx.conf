worker_processes 4;

events {
   worker_connections	1024;
}

http {
   include	mime.types;
   default_type	application/octet-stream;
   keepalive_timeout	65;
   
    # Define the upstream group for the backend service
    upstream webservers {
        # Use the service name from docker-compose.yml
        # Docker's DNS will resolve this to the container's IP
        server backend:8080;
    }

    # Redirect HTTP traffic to HTTPS
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    # Proxy HTTPS traffic
    server {
        listen 443 ssl;
        server_name localhost;

        # Use the certificates generated by init.sh
        ssl_certificate /etc/nginx/ssl/hi.crt;
        ssl_certificate_key /etc/nginx/ssl/hi.key;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass the request to the upstream group
            proxy_pass http://webservers;
            proxy_read_timeout  90s;
        }
    }
}